USE [LMS];

GO;

-- INSERT | SinhVien -> Thêm tài khoản sinh viên
CREATE TRIGGER trg_AddTaiKhoanSinhVien
ON SinhVien
AFTER INSERT
AS
BEGIN

    DECLARE @MSSV CHAR(20);
    DECLARE @USERNAME VARCHAR(50);
    DECLARE @PASSWORD VARCHAR(255);
    DECLARE @NAMSINH DATE;

    SELECT @MSSV = MSSV, @NAMSINH = NAMSINH FROM INSERTED;

    SET @USERNAME = @MSSV;

    SET @PASSWORD = CONVERT(VARCHAR(12), @NAMSINH, 112); 
	--PRINT(CONVERT(VARCHAR(12), @NAMSINH, 112));

    INSERT INTO TaiKhoan (ID, USERNAME, PASSWORD, ROLE)
    VALUES (@MSSV, @USERNAME, @PASSWORD, 1);

	INSERT INTO TK_SV (ID, MSSV)
	VALUES (@MSSV, @MSSV)
END;

GO;

-- DELETE | TK_SV -> Xóa tài khoản sinh viên
CREATE TRIGGER trg_XoaTaiKhoanSinhVien
ON TK_SV
AFTER DELETE
AS
BEGIN

    DECLARE @MSSV CHAR(20);
    DECLARE @ID VARCHAR(50);
    DECLARE @PASSWORD VARCHAR(255);
    DECLARE @NAMSINH DATE;

    SELECT @MSSV = MSSV, @ID = ID FROM DELETED;

	DELETE FROM TaiKhoan WHERE ID = @ID;

END;

DROP TRIGGER trg_XoaTaiKhoanSinhVien;
GO;

-- INSERT | SinhVien -> Thêm tài khoản sinh viên
CREATE TRIGGER trg_AddTaiKhoanGiangVien
ON GiangVien
AFTER INSERT
AS
BEGIN

    DECLARE @MSGV CHAR(20);
    DECLARE @USERNAME VARCHAR(50);
    DECLARE @PASSWORD VARCHAR(255);
    DECLARE @NAMSINH DATE;

    SELECT @MSGV = MSGV, @NAMSINH = NAMSINH FROM INSERTED;

    SET @USERNAME = @MSGV;

    SET @PASSWORD = CONVERT(VARCHAR(12), @NAMSINH, 112); 
	--PRINT(CONVERT(VARCHAR(12), @NAMSINH, 112));

    INSERT INTO TaiKhoan (ID, USERNAME, PASSWORD, ROLE)
    VALUES (@MSGV, @USERNAME, @PASSWORD, 2);

	INSERT INTO TK_GV(ID, MSGV)
	VALUES (@MSGV, @MSGV)
END;

GO;

-- DELETE | TK_GV -> Xóa tài khoản sinh viên
CREATE TRIGGER trg_XoaTaiKhoanGiangVien
ON TK_GV
AFTER DELETE
AS
BEGIN

    DECLARE @MSGV CHAR(20);
    DECLARE @ID VARCHAR(50);
    DECLARE @PASSWORD VARCHAR(255);
    DECLARE @NAMSINH DATE;

    SELECT @MSGV = MSGV, @ID = ID FROM DELETED;

	DELETE FROM TaiKhoan WHERE ID = @ID;

END;

DROP TRIGGER trg_XoaTaiKhoanGiangVien;
GO;

-- Update | DiemSo -> Cập nhập điểm tổng và tín chỉ của sinh viên
CREATE TRIGGER trg_CapnhatDiemso
ON DiemSo
AFTER UPDATE
AS
BEGIN

    DECLARE @MSSV CHAR(20);
    DECLARE @MAMH CHAR(10);
    DECLARE @TONGTINCHI INT;
    DECLARE @GPA FLOAT;

	SELECT @MSSV = MSSV, @MAMH = MAMH FROM inserted;

	SELECT @GPA = AVG(TONG), @TONGTINCHI = SUM(CASE WHEN TRANGTHAI = 1 THEN TINCHI END)
	FROM (
		SELECT MAMH, T1.MALH
		FROM 
			(SELECT MALH FROM DSLOP WHERE MSSV = @MSSV) AS T1
			JOIN LopHoc AS T2 ON T1.MALH = T2.MALH
	) AS T5
	JOIN DiemSo ON MSSV = @MSSV AND T5.MAMH = @MAMH
	LEFT JOIN MonHoc AS T4 ON T4.MAMH = T5.MAMH

	UPDATE SinhVien SET TONGTINCHI = @TONGTINCHI WHERE MSSV = @MSSV;
	UPDATE SinhVien SET GPA = @GPA WHERE MSSV = @MSSV;

END;

DROP TRIGGER trg_CapnhatDiemso

GO;

-- Insert | DSLop -> Sau khi đăng ký lớp => kiểm tra full phòng và khóa lớp
CREATE TRIGGER trg_Kiemtrafull
ON DSLOP
AFTER INSERT
AS
BEGIN

    DECLARE @MSSV CHAR(20);
    DECLARE @MALH CHAR(10);
    DECLARE @SIZE INT;
    DECLARE @SISO INT;
	       

    SELECT @MSSV = MSSV, @MALH = MALH FROM INSERTED;
	SELECT @SISO = COUNT(*) FROM DSLOP WHERE MALH = @MALH;
	SELECT @SIZE = SIZE 
	FROM (
		LopHoc AS T1 JOIN PhongHoc AS T2 ON T1.MAPG = T2.MAPG
	)	

	IF (@SIZE = @SISO) 
	BEGIN
		UPDATE LopHoc SET TRANGTHAI = 1 WHERE MALH = @MALH;
	END

END;

DROP TRIGGER trg_Kiemtrafull

go;

-- Insert | LopHoc -> Sau khi mở lớp => thêm ràng buộc giữa giảng viên và lớp học
CREATE TRIGGER trg_ThemGVLop
ON LopHoc
AFTER INSERT
AS
BEGIN

    DECLARE @MSGV CHAR(20);;
    DECLARE @MALH CHAR(10);	       

    SELECT @MSGV = MSGV, @MALH = MALH FROM INSERTED;

	INSERT INTO LOPGV(MALH, MSGV)
	VALUES (@MALH, @MSGV)	

END;

DROP TRIGGER trg_Kiemtrafull

